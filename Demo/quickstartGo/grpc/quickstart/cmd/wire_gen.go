// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cmd

import (
	"github.com/google/wire"
	"quickstart/config"
	"quickstart/controller/grpc"
	"quickstart/proto"
	"quickstart/server"
)

// Injectors from wire.go:

func InitializeServer() (*server.Server, error) {
	unimplementedHelloServiceServer := proto.UnimplementedHelloServiceServer{}
	helloService := &grpc.HelloService{
		UnimplementedHelloServiceServer: unimplementedHelloServiceServer,
	}
	grpcServer := server.NewGRPCServer(helloService)
	configConfig := config.NewConfig()
	listener, err := server.NewNetListener(configConfig)
	if err != nil {
		return nil, err
	}
	serverServer := &server.Server{
		GRPCServer: grpcServer,
		Listener:   listener,
	}
	return serverServer, nil
}

// wire.go:

var applicationContext = wire.NewSet(wire.Struct(new(proto.UnimplementedHelloServiceServer), "*"), config.NewConfig, wire.Struct(new(grpc.HelloService), "*"), wire.Bind(new(proto.HelloServiceServer), new(*grpc.HelloService)), server.NewNetListener, server.NewGRPCServer, wire.Struct(new(server.Server), "*"))
